version: '2'

services:

  session-database:
    image: redis
    restart: always
    volumes:
      - session-db-storage:/data
    networks:
      - back-tire

  app-database:
    image: mysql
    restart: always
    volumes:
      - app-db-storage:/var/lib/mysql
    networks:
      - back-tire
    environment:
      MYSQL_ROOT_PASSWORD: 'XzwK}kM#'
      MYSQL_DATABASE: expressJsTemplate

  api-server:
    build: ./api
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - ./api/src:/app
      - app-storage:/upload
    networks:
      - front-tire
      - back-tire
    working_dir: /app
    command: pm2 start app.js --no-daemon
    environment:
      NODE_ENV: production
      PORT: 3000
      SDB_PROTOCOL: redis
      SDB_HOST: session-database
      SDB_PORT: 6379
      ADB_PROTOCOL: mysql
      ADB_HOST: app-database
      ADB_PORT: 3306
      ADB_USERNAME: root
      ADB_PASSWORD: 'XzwK}kM#'
      ADB_NAME: expressJsTemplate
      SALT: 'MT[;(W8T2l?eQZRMVh0%q%Z}'
      SECRET_KEY: 'zO463At!<HLVHR@[Sc5/KF--O5oScgdCZ,F<(?WnFi;U0)^Usy7WnK?H4,}FPWGP'
    depends_on:
      - session-database
      - app-database

  dispatcher:
    image: nginx
    restart: always
    ports:
      - '8080:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl
      - app-storage:/upload
    networks:
      - front-tire
    environment:
      API_SERVER_PORT: 3000
      API_SERVER_HOST: api-server
    depends_on:
      - api-server

volumes:
  session-db-storage:
  app-db-storage:
  app-storage:

networks:
  front-tire:
  back-tire:
